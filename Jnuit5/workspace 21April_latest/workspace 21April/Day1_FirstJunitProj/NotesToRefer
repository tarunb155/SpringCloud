Junit5

Introduction to Junit5
Junit5 Architecture
Creating Test Using Junit5
Basic Annotations and TestLifeCycle
Assertions


***************************

Testing: ensures is the requirements/specifications are matching with client expectations or not
Actual Result matching with expected result 

Unit Testing: Testing of individual components of an application..
Done by developers..

Calculator -----> add(),sub(),mul(),divide()
TestCalculator--->testAdd(),testSub(),testMul(),testDivide()
                   a+b        a-b        a*b       a/b
                   	
IntegrationTesting/Assembly Testing  -------------->   a+b*c/d

Unit Testing should be done in a very discplined and rigrous manner
Cost will be low and effort will also be less in order to solve the defect.

Junit framework is a framework in java to perform unit testing..
Junit5 is the next generation of Junit..


Junit 5 Vs Junit 4

Junit 4 supports Java 5 or higher....Junit5 supports java 8 or higher...
Junit 4 is all in one package ....Junit5 is divided into 3 seperate modules


Junit 5 Architecture
Junit5=JunitPlatform+ JunitJupiter+ JunitVintage

JunitPlatform:Core module for running/launching test on JVM.Main Test Engine
JunitJupiter:include new programming extensions,all new junit annotations.
JunitVintage:Backward Compatibility...Support Junit3 or Junit4 Test Case

Extensions(3rdParty)-->Write your own extensions/new API

LifeCycle Annotations Junit5

@Test-->It is used to mark a method as Junit Test Method...org.junit.jupiter.api.Test

@BeforeAll->The annotated method will run before all test method in the test Class.

@AfterAll->The annotated method will run after all test method in the test Class.

@BeforeEach->The annotated method  will run before each test method in the test class

@AfterEach->The annotated method  will run after each test method in the test class

@Disabled->To ignore a test,test will not run





Junit4                   JunitJupiter
@org.junit.Test          org.junit.jupiter.api.Test
@BeforeClass             @BeforeAll
@AfterClass              @AfterAll
@Before                  @BeforeEach
@After                   @AfterEach
@Ignore                  @Disabled

LifeCycle:
ByDefault the junit Platform actually creates a new Test Class Instance for each Test Method it runs

Calculator--->TestCalculator
add() ------->testAdd()-->Calculator class object
sub()-------->testSub()-->Calculator class object
multiply()---->testMultiply()->Calculator class object
divide()------>testDivide()->Calculator class object

BeforeAll and AfterAll methods they have to be static

@TestInstance

Assertions
Assertion is collection of utility methods that supports asserting conditions in test
Junit 5 has an Assertion Class with multiple Static methods in package
org.junit.jupiter.api
Some assertion methods are similar to existing method in Junit4 but new overloaded methods 
have also been added.














